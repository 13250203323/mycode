常用操作
git init
git clone
git add 
git commit
git status 
git rm
git mv
git ignore
分支与合并
git branch 
git tag
git checkout
git stash
git merge
查看对比记录
git show
git log
git diff

git checkout
git clean
git reset
git revert



git pull origin master -- 更新(从远程代码库上取得它最新的版)

git checkout -b new_feature  -- 创建并切换分支

git checkout -- [file]  --撤销本地文件的修改

git commit -m "initial commit" -- 提交, 附带消息

git status -- 查看状态

git merge master -- 合并到主分支

git branch -D new_feature  -- 删除分支 new_feature 


--------------------



git branch  -- 查看分支

git branch [new_branch_name] --创建分支
git checkout master -- 切换分支
git checkout -b [new_branch_name] --创建并切换分支

git merge new_branch_name -- 合并分支到当前分支(master)

git branch -d new_feature -- 删除分支（未合并有错误信息）
git branch -D new_feature -- 强制删除分支 



git clone https://your_username@bitbucket.org/your_username/name_of_remote_repository.git -- 取得远程代码库

git clone https://github.com/wantnon2/c3dEngine2.git

"git add" and/or "git commit -a"
git add . -- 加载到分支上
git add my_file, my_other_file --加载到分支上
git commit -m "initial commit" -- 提交, 附带消息
git status -- 查看状态（已加载（staged）和未加载（unstaged）文件的状态、提交等）

git merge new_feature -- 把指定分支合并到当前分支来


git clean -- 清除untracked 文件(即远程分支上没有的) 
	-n 显示 将要 删除的 文件 和  目录
	-f 删除 文件
	-df 删除 文件 和 目录

git reset -- 清除tracked的文件 --hard FETCH_HEAD
git reset --hard origin/maste

git log -n 	-- 查看分支的历史记录 前n条  
		--  ctl + c 退出

git reset --hard b7057a9	-- 现在让我们来重置回第一次提交的状态：
6e93b14a5d5f900774ee64b98f42a7adb95462aa

git checkout -- EnjoyWords.udf 	覆盖更新本地的文件

git push origin master --分支

-- 手动解决冲突 后

$ git add . --添加冲突后的文件
$ git commit -m "conflict fixed"	-- 再次提交
[master 59bc1cb] conflict fixed

再push就提交成功了

git账号
kelvin_yu@126.com
84014702yzJ