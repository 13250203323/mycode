<!DOCTYPE html>
<html lang="zh-cn">
<head>
<meta charset="utf-8"/>
<title>python基础学习笔记（十三） - 虫师 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=umTYGJ1Xbo61obX_Gqsil3krUSBXOilTLax6nesdN401"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/Minyx2_Lite/bundle-Minyx2_Lite.css?v=box8Dmmj5G0VFMZyypCbLIqNJsuu5lz6TpJ4OOK0WkE1"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/91739.css?v=LfcVDbX80919KwJm7jT6CZkrcrc%3d"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/fnng/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/fnng/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/fnng/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'fnng', cb_enable_mathjax=false;</script>
<script src="/bundles/blog-common.js?v=XKoehlJN5H21FBVcSKsnT53hGsKVYw1yJ99ZTW__hhA1" type="text/javascript"></script>
<script src="/skins/Minyx2_Lite/bundle-Minyx2_Lite.js?v=dAK2Rw4GyogXqBvhMZEW0IkYD2kjtuL3y_BKRj-vp4g1" language="javascript" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>


<div id="container">
    <a class="minyx" href="http://www.cnblogs.com/">代码改变世界</a>
    <ul id="topMnu">
        <!-- 统计数据 -->
        <li>
            
                
Posts - 255, 
Articles - 1, 
Comments - 1974
<!---->
            
        </li>
        <!-- 这边可以增加一些链接 -->
        <!-- 博客园 -->
        <li><a href="http://www.cnblogs.com">Cnblogs</a></li>
        <!-- 管理 -->
        <li id="topMnu-dashboard">
            <a id="lnkDashboard" href="http://www.cnblogs.com/fnng/admin/EditPosts.aspx">Dashboard</a></li>
        <li>
            <a id="lnkLogin" href="http://passport.cnblogs.com/login.aspx?ReturnUrl=http://www.cnblogs.com/fnng/archive/2013/05/20/3089816.html">Login</a></li>
    </ul>

    <script type="text/javascript">
        var m = window.__blog.topMenuRendered;
        if (m) { m(__$("topMnu")); }
    </script>

    <div id="header">
        <ul id="menu">
            <!-- 首页，当前section加上current类 -->
            <li id="menu-home" class="current">
                <a id="lnkHome" href="http://www.cnblogs.com/fnng/">Home</a></li>
            <!-- 联系 -->
            <li id="menu-contact">
                <a id="lnkContact" href="http://space.cnblogs.com/msg/send/%e8%99%ab%e5%b8%88">Contact</a></li>
            <!-- 相册 -->
            <li id="menu-gallary">
                <a id="lnkGallery" href="http://www.cnblogs.com/fnng/gallery.html">Gallery</a></li>
            <!-- Rss订阅 -->
            <li id="rss">
                <a id="lnkRss" href="http://www.cnblogs.com/fnng/rss">RSS</a></li>
        </ul>
        <div id="newmsg"></div>
        <h1>
            <!-- 主标题 -->
            <a id="lnkBlogTitle" href="http://www.cnblogs.com/fnng/">虫师</a>
            <!-- 子标题 -->
            <small>
                大人不华，君子务实。
独立博客：http://www.testpub.cn</small>
        </h1>
    </div>

    <script type="text/javascript">
        var m = window.__blog.headerRendered;
        if (m) { m(__$("header")); }
    </script>

    <div id="wrapper">
        <div id="content">
            <script type="text/javascript">
                var m = window.__blog.preRenderPosts;
                if (m) { m(); }
            </script>
            
<div id="post_detail">
<div class="post" id="post">
    <a name="top"></a>
    <h2><a id="cb_post_title_url" href="http://www.cnblogs.com/fnng/archive/2013/05/20/3089816.html">python基础学习笔记（十三）</a></h2>
    <small>2013-05-20 23:10 by 虫师, <span id="post_view_count">...</span> 阅读, <span id="post_comment_count">...</span> 评论, <a href="#" onclick="AddToWz(3089816);return false;">收藏</a>,  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3089816" rel="nofollow">编辑</a></small>
    <div class="entry">
        <div id="cnblogs_post_body"><p class="p0">&nbsp;</p>
<p class="p0">&nbsp;</p>
<p class="p0"><span>re<span style="font-family: 宋体;">模块包含对&nbsp;正则表达式。本章会对</span><span style="font-family: Calibri;">re</span><span style="font-family: 宋体;">模块主要特征和正则表达式进行介绍。</span></span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><strong>什么是正则表达式</strong></p>
<p class="p0"><span>正则表达式是可以匹配文本片段的模式。最简单的正则表达式就是普通字符串，可以匹配其自身。换包话说，正则表达式</span><span>&rsquo;</span><span>python</span><span>&rsquo;</span><span>&nbsp;可以匹配字符串</span><span>&rsquo;</span><span>python</span><span>&rsquo;</span><span>&nbsp;。你可以用这种匹配行为搜索文本中的模式，并且用计算后有值并发特定模式，或都将文本进行分段。</span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><strong><span style="color: #008080;">**&nbsp;<span style="font-family: 宋体;">通配符</span></span></strong></p>
<p class="p0"><span>正则表达式可以匹配多于一个的字符串，你可以使用一些特殊字符创建这类模式。比如点号（<span style="font-family: Calibri;">.</span><span style="font-family: 宋体;">）可以匹配任何字符。在我们用</span><span style="font-family: Calibri;">window&nbsp;</span><span style="font-family: 宋体;">搜索时用问号（？）匹配任意一位字符，作用是一样的。那么这类符号就叫&nbsp;通配符。</span></span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="color: #008000; background-color: #ffffff;"><strong>**&nbsp;<span style="font-family: 宋体;">对特殊字符进行转义</span></strong></span></p>
<p class="p0"><span>通过上面的方法，假如我们要匹配&ldquo;<span style="font-family: Calibri;">python.org</span><span style="font-family: 宋体;">&rdquo;，直接用用&lsquo;</span><span style="font-family: Calibri;">python.org</span><span style="font-family: 宋体;">&rsquo;可以么？这么做可以，但这样也会匹配&ldquo;</span><span style="font-family: Calibri;">pythonzorg</span><span style="font-family: 宋体;">&rdquo;，这可不是所期望的结果。</span></span></p>
<p class="p0"><span>好吧！我们需要对它进行转义，可以在它前面加上发斜线。因此，本例中可以使用&ldquo;<span style="font-family: Calibri;">python\\.org</span><span style="font-family: 宋体;">&rdquo;，这样就只会匹配&ldquo;</span><span style="font-family: Calibri;">python.org</span><span style="font-family: 宋体;">&rdquo;了。</span></span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="color: #008000;"><strong>**&nbsp;<span style="font-family: 宋体;">字符集</span></strong></span></p>
<p class="p0"><span>我们可以使用中括号（<span style="font-family: Calibri;">[&nbsp;]</span><span style="font-family: 宋体;">）括住字符串来创建字符集。可以使用范围，比如&lsquo;</span><span style="font-family: Calibri;">[a-z]</span><span style="font-family: 宋体;">&rsquo;能够匹配</span><span style="font-family: Calibri;">a</span><span style="font-family: 宋体;">到</span><span style="font-family: Calibri;">z</span><span style="font-family: 宋体;">的任意一个字符，还可以通过一个接一个的方式将范围联合起来使用，比如&lsquo;</span><span style="font-family: Calibri;">[a-zA-Z0-9]</span><span style="font-family: 宋体;">&rsquo;能够匹配任意大小写字母和数字。</span></span></p>
<p class="p0"><span>反转字符集，可以在开头使用<span style="font-family: Calibri;">^</span><span style="font-family: 宋体;">字符，比如&lsquo;</span><span style="font-family: Calibri;">[^abc]</span><span style="font-family: 宋体;">&rsquo;可以匹配任何除了</span><span style="font-family: Calibri;">a</span><span style="font-family: 宋体;">、</span><span style="font-family: Calibri;">b</span><span style="font-family: 宋体;">、</span><span style="font-family: Calibri;">c</span><span style="font-family: 宋体;">之外的字符。</span></span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="color: #008000;"><strong>**&nbsp;<span style="font-family: 宋体;">选择符</span></strong></span></p>
<p class="p0"><span>有时候只想匹配字符串</span><span>&rsquo;</span><span>python</span><span>&rsquo;</span><span>&nbsp;和&nbsp;</span><span>&rsquo;</span><span>perl</span><span>&rsquo;</span><span>&nbsp;&nbsp;，可以使用选择项的特殊字符：管道符号（<span style="font-family: Calibri;">|</span><span style="font-family: 宋体;">）&nbsp;。因此，&nbsp;所需模式可以写成</span></span><span>&rsquo;</span><span>python|perl</span><span>&rsquo;</span><span>&nbsp;。</span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span>**&nbsp;<span style="font-family: 宋体;">子模式</span></span></p>
<p class="p0"><span>但是，有些时候不需要对整个模式使用选择符<span style="font-family: Calibri;">---</span><span style="font-family: 宋体;">只是模式的一部分。这时可以使用圆括号起需要的部分，或称子模式。&nbsp;前例可以写成&nbsp;</span></span><span>&lsquo;</span><span>p(ython&nbsp;|&nbsp;erl)</span><span>&rsquo;</span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="color: #008000;"><strong>**&nbsp;<span style="font-family: 宋体;">可选项</span></strong></span></p>
<p class="p0"><span>在子模式后面加上问号，它就变成了可选项。它可能出现在匹配字符串，但并非必须的。</span></p>
<p class="p0"><span>r</span><span>&rsquo;</span><span>(heep://)?(www\.)?python\.org</span><span>&rsquo;</span></p>
<p class="p0"><span>只能匹配下列字符：</span></p>
<p class="p0"><span>&lsquo;</span><span>http://www.python.org</span><span>&rsquo;</span></p>
<p class="p0"><span>&lsquo;</span><span>http://python.org</span><span>&rsquo;</span></p>
<p class="p0"><span>&lsquo;</span><span>www.python.org</span><span>&rsquo;</span></p>
<p class="p0"><span>&lsquo;</span><span>python.org</span><span>&rsquo;</span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="color: #008000;"><strong>**<span style="font-family: 宋体;">　重复子模式</span></strong></span></p>
<p class="p0"><span>(pattern)*&nbsp;:&nbsp;<span style="font-family: 宋体;">允许模式重复</span><span style="font-family: Calibri;">0</span><span style="font-family: 宋体;">次或多次</span></span></p>
<p class="p0"><span>(pattern)+&nbsp;:&nbsp;<span style="font-family: 宋体;">允许模式重复</span><span style="font-family: Calibri;">1</span><span style="font-family: 宋体;">次或多次</span></span></p>
<p class="p0"><span>(pattern){m,n}&nbsp;:&nbsp;<span style="font-family: 宋体;">允许模式重复</span><span style="font-family: Calibri;">m~&nbsp;n&nbsp;</span><span style="font-family: 宋体;">次</span></span></p>
<p class="p0"><span>例如：</span></p>
<p class="p0"><span>r</span><span>&rsquo;</span><span>w&nbsp;*&nbsp;\.python\.org</span><span>&rsquo;</span><span>&nbsp;&nbsp;匹配&nbsp;</span><span>&lsquo;</span><span>www.python.org</span><span>&rsquo;</span><span>&nbsp;、</span><span>&rsquo;</span><span>.python.org</span><span>&rsquo;</span><span>&nbsp;、</span><span>&rsquo;</span><span>wwwwwww.python.org</span><span>&rsquo;</span></p>
<p class="p0"><span>r</span><span>&rsquo;</span><span>w&nbsp;+&nbsp;\.python\.org</span><span>&rsquo;</span><span>&nbsp;&nbsp;匹配&nbsp;</span><span>&lsquo;</span><span>w.python.org</span><span>&rsquo;</span><span>&nbsp;；但不能匹配&nbsp;</span><span>&rsquo;</span><span>.python.org</span><span>&rsquo;</span><span>&nbsp;</span></p>
<p class="p0"><span>r</span><span>&rsquo;</span><span>w&nbsp;{3,4}\.python\.org</span><span>&rsquo;</span><span>&nbsp;&nbsp;只能匹配</span><span>&lsquo;</span><span>www.python.org</span><span>&rsquo;</span><span>&nbsp;和</span><span>&lsquo;</span><span>wwww.python.org</span><span>&rsquo;</span><span>&nbsp;</span></p>
<p class="p0">&nbsp;</p>
<p class="p0"><span style="font-size: 16px;"><strong>re<span style="font-family: 宋体;">模块的内容</span></strong></span></p>
<p class="p0">&nbsp;</p>
<p class="p0">re<span style="font-family: 宋体;">模块中一些重要的函数：</span></p>
<p class="p0"><span><img src="http://images.cnitblog.com/blog/311516/201305/20225614-434b1577bb69472dadf5d9e4cef7e28f.png" alt="" /></span></p>
<p class="p0"><span>　　re.compile&nbsp;<span style="font-family: 宋体;">将正则表达式转换为模式对象，可以实现更有效率的匹配。</span></span></p>
<p class="p0"><span>　　re.search&nbsp;<span style="font-family: 宋体;">会在给定字符串中寻找第一个匹配给正则表式的子字符串。找到函数返回</span><span style="font-family: Calibri;">MatchObject(</span><span style="font-family: 宋体;">值为</span><span style="font-family: Calibri;">True)</span><span style="font-family: 宋体;">，否则返回</span><span style="font-family: Calibri;">None(</span><span style="font-family: 宋体;">值为</span><span style="font-family: Calibri;">False)&nbsp;</span><span style="font-family: 宋体;">。因为返回值的性质，所以该函数可以用在条件语句中：</span></span></p>
<p class="p0">if&nbsp;re.serch(pat,&nbsp;string):</p>
<p class="p0">print&nbsp;&lsquo;found&nbsp;it&nbsp;!&rsquo;</p>
<p class="p0">&nbsp;</p>
<p class="p0"><span>　　re.math&nbsp;<span style="font-family: 宋体;">会在给定字符串的开头匹配正则表达式。因此，</span><span style="font-family: Calibri;">re.math(</span></span><span>&lsquo;</span><span>p</span><span>&rsquo;</span><span>&nbsp;,&nbsp;</span><span>&lsquo;</span><span>python</span><span>&rsquo;</span><span>)<span style="font-family: 宋体;">返回真，</span><span style="font-family: Calibri;">re.math(</span></span><span>&lsquo;</span><span>p</span><span>&rsquo;</span><span>&nbsp;,&nbsp;</span><span>&lsquo;</span><span>www.python</span><span>&rsquo;</span><span>)&nbsp;<span style="font-family: 宋体;">则返回假。</span></span></p>
<p class="p0"><span>　　re.split&nbsp;<span style="font-family: 宋体;">会根据模式的匹配项来分割字符串。</span></span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; <span style="color: #0000ff;">import</span><span style="color: #000000;"> re
</span>&gt;&gt;&gt; some_text = <span style="color: #800000;">'</span><span style="color: #800000;">alpha , beta ,,,gamma delta </span><span style="color: #800000;">'</span>
&gt;&gt;&gt; re.split(<span style="color: #800000;">'</span><span style="color: #800000;">[,]+</span><span style="color: #800000;">'</span><span style="color: #000000;">,some_text)
[</span><span style="color: #800000;">'</span><span style="color: #800000;">alpha </span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;"> beta </span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">gamma delta </span><span style="color: #800000;">'</span>]</pre>
</div>
<p>&nbsp;</p>
<p class="p0"><span>　　re.&nbsp;findall<span style="font-family: 宋体;">以列表形式返回给定模式的所有匹配项。比如，要在字符串中查找所有单词，可以像下面这么做：</span></span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; <span style="color: #0000ff;">import</span><span style="color: #000000;"> re
</span>&gt;&gt;&gt; pat = <span style="color: #800000;">'</span><span style="color: #800000;">[a-zA-Z]+</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; text = <span style="color: #800000;">'</span><span style="color: #800000;">"Hm...err -- are you sure?" he said, sounding insecure.</span><span style="color: #800000;">'</span>
&gt;&gt;&gt;<span style="color: #000000;"> re.findall(pat,text)
[</span><span style="color: #800000;">'</span><span style="color: #800000;">Hm</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">err</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">are</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">you</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">sure</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">he</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">said</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">sounding</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">insecure</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>&nbsp;</p>
<p class="p0"><span>　　re.sub<span style="font-family: 宋体;">的作用在于：使用给定的替换内容将匹配模式的子符串（最左端并且重叠子字符串）替换掉。</span></span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; <span style="color: #0000ff;">import</span><span style="color: #000000;"> re
</span>&gt;&gt;&gt; pat = <span style="color: #800000;">'</span><span style="color: #800000;">{name}</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; text = <span style="color: #800000;">'</span><span style="color: #800000;">Dear {name}...</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; re.sub(pat, <span style="color: #800000;">'</span><span style="color: #800000;">Mr. Gumby</span><span style="color: #800000;">'</span><span style="color: #000000;">,text)
</span><span style="color: #800000;">'</span><span style="color: #800000;">Dear Mr. Gumby...</span><span style="color: #800000;">'</span></pre>
</div>
<p>&nbsp;</p>
<p class="p0"><span>　　re.escape&nbsp;<span style="font-family: 宋体;">函数，可以对字符串中所有可能被解释为正则运算符的字符进行转义的应用函数。</span></span></p>
<p class="p0"><span>如果字符串很长且包含很多特殊字符，而你又不想输入一大堆反斜线，可以使用这个函数：</span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; re.escape(<span style="color: #800000;">'</span><span style="color: #800000;">www.python.org</span><span style="color: #800000;">'</span><span style="color: #000000;">)
</span><span style="color: #800000;">'</span><span style="color: #800000;">www\\.python\\.org</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; re.escape(<span style="color: #800000;">'</span><span style="color: #800000;">but where is the ambiguity?</span><span style="color: #800000;">'</span><span style="color: #000000;">)
</span><span style="color: #800000;">'</span><span style="color: #800000;">but\\ where\\ is\\ the\\ ambiguity\\?</span><span style="color: #800000;">'</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p class="p0">&nbsp;</p>
<p class="p0"><strong>匹配对象和组</strong></p>
<p class="p0">&nbsp;</p>
<p class="p0">简单来说，组就是放置在圆括号里内的子模块，组的序号取决于它左侧的括号数。组<span style="font-family: Calibri;">0</span><span style="font-family: 宋体;">就是整个模块，所以在下面的模式中：</span></p>
<p class="p0">&lsquo;There&nbsp;&nbsp;(was&nbsp;a&nbsp;(wee)&nbsp;(cooper))&nbsp;who&nbsp;(lived&nbsp;in&nbsp;Fyfe)&rsquo;</p>
<p class="p0">包含组有：</p>
<p class="p0">0&nbsp;&nbsp;There&nbsp;&nbsp;was&nbsp;a&nbsp;&nbsp;wee&nbsp;cooper&nbsp;&nbsp;who&nbsp;&nbsp;lived&nbsp;in&nbsp;Fyfe</p>
<p class="p0">1&nbsp;&nbsp;was&nbsp;a&nbsp;&nbsp;wee&nbsp;&nbsp;cooper</p>
<p class="p0">2&nbsp;&nbsp;wee</p>
<p class="p0">3&nbsp;&nbsp;cooper</p>
<p class="p0">4&nbsp;&nbsp;lived&nbsp;in&nbsp;Fyfe</p>
<p class="p0">&nbsp;</p>
<p class="p0">re&nbsp;<span style="font-family: 宋体;">匹配对象的重要方法</span></p>
<p class="p0"><span style="font-family: 宋体;"><img src="http://images.cnitblog.com/blog/311516/201305/20225954-337d2b6cef75415eb8cc39c189bb84b5.png" alt="" /></span></p>
<p class="p0"><span>下面看实例：</span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; <span style="color: #0000ff;">import</span><span style="color: #000000;"> re
</span>&gt;&gt;&gt; m = re.match(r<span style="color: #800000;">'</span><span style="color: #800000;">www\.(.*)\..{3}</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">www.python.org</span><span style="color: #800000;">'</span><span style="color: #000000;">)
</span>&gt;&gt;&gt;<span style="color: #000000;"> m.group()
</span><span style="color: #800000;">'</span><span style="color: #800000;">www.python.org</span><span style="color: #800000;">'</span>
&gt;&gt;&gt;<span style="color: #000000;"> m.group(0)
</span><span style="color: #800000;">'</span><span style="color: #800000;">www.python.org</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; m.group(1<span style="color: #000000;">)
</span><span style="color: #800000;">'</span><span style="color: #800000;">python</span><span style="color: #800000;">'</span>
&gt;&gt;&gt; m.start(1<span style="color: #000000;">)
</span>4
&gt;&gt;&gt; m.end(1<span style="color: #000000;">)
</span>10
&gt;&gt;&gt; m.span(1<span style="color: #000000;">)
(</span>4, 10)</pre>
</div>
<p class="p0">　　group<span style="font-family: 宋体;">方法返回模式中与给定组匹配的字符串，如果没有组号，默认为</span><span style="font-family: Calibri;">0&nbsp;</span><span style="font-family: 宋体;">；如上面：</span>m.group()==m.group(0)&nbsp;；如果给定一个组号，会返回单个字符串。</p>
<p class="p0">　　start&nbsp;<span style="font-family: 宋体;">方法返回给定组匹配项的开始索引，</span></p>
<p class="p0">　　end<span style="font-family: 宋体;">方法返回给定组匹配项的结束索引加</span><span style="font-family: Calibri;">1</span><span style="font-family: 宋体;">；</span></p>
<p class="p0">　　span<span style="font-family: 宋体;">以元组（</span><span style="font-family: Calibri;">start</span><span style="font-family: 宋体;">，</span><span style="font-family: Calibri;">end</span><span style="font-family: 宋体;">）的形式返回给组的开始和结束位置的索引。</span></p>
<p class="p0">&nbsp;</p>
<p class="p0">----------------------------</p>
<p class="p0">正则表达式应该是不容易理解的一个知识点；python没意思的基础终于学完了。虽然学的不扎实，但大体有了个印象；后面的将会非常有意思，读取文件，编写图形窗口，连接数据库，web编程....</p>
<p class="p0">&nbsp;</p>
<p class="p0">&nbsp;</p>
<p>&nbsp;</p></div><div id="MySignature"></div>
        <div class="clear"></div>
        <div id="blog_post_info_block">
        <div id="blog_post_info">
        </div>
        <div class="clear"></div>
        <div id="post_next_prev"></div>
    </div>
</div>
    <ul class="postmetadata">
        <li class="icon_cat" id="BlogPostCategory"></li>
        <li class="icon_bullet" id="EntryTag"></li>
    </ul>
</div>
<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=91739,cb_entryId=3089816,cb_blogApp=currentBlogApp,cb_blogUserGuid='f93e222f-6da1-e011-a53f-842b2b196315',cb_entryCreatedDate='2013/5/20 23:10:00';loadViewCount(cb_entryId);</script>
<script type="text/javascript">
    var m = window.__blog.postRendered;
    if (m) { m(__$("post")); }
</script>
<script type="text/javascript">
    var m = window.__blog.postRenderPosts;
    if (m) { m(); }
</script>
</div><a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id='comment_form' class='commentform'>
<a name='commentform'></a>
<div id='divCommentShow'></div>
<div id='comment_nav'><span id='span_refresh_tips'></span><a href='javascript:void(0);' onclick='return RefreshCommentList();' id='lnk_RefreshComments' runat='server' clientidmode='Static'>刷新评论</a><a href='#' onclick='return RefreshPage();'>刷新页面</a><a href='#top'>返回顶部</a></div>
<div id='comment_form_container'></div>
<div class='ad_text_commentbox' id='ad_text_under_commentbox'></div>
<div id='ad_t2'></div>
<div id='opt_under_post'></div>
<div id='ad_c1' class='c_ad_block'></div>
<div id='under_post_news'></div>
<div id='ad_c2' class='c_ad_block'></div>
<div id='under_post_kb'></div>
<div id='HistoryToday' class='c_ad_block'></div>
<script type='text/javascript'>
$(function () {
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();
    deliverAdC2();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);    
});
</script>
</div>


        </div>

        <script type="text/javascript">
            var m = window.__blog.contentRendered;
            if (m) { m(__$("content")); }
        </script>

        <div id="sidebar">
            
<div id="about">
<div>
<h2 id="about_title">About</h2>
<div id="about_body">
<div id="blog-news"></div>
<script type="text/javascript">loadBlogNews();</script>
</div>
</div>
</div>

            <script type="text/javascript">
                var m = window.__blog.aboutRendered;
                if (m) { m(__$("about")); }
            </script>
            
<div id="mySearchWrapper">
    <div id="mySearch">
        <input type="image" src="/skins/Minyx2_Lite/images/btnsearch.gif" id="btnZzk"  class="submit" onclick="zzk_go();return false;"/>
        <label class="lb_search"><input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="keyword" /></label>
    </div>
</div>

            <script type="text/javascript">
                var m = window.__blog.searchFormRendered;
                if (m) { m(__$("searchform")); }
            </script>
            <div id="sideMain">
            </div>
            <div id="sideRight">
            </div>
            <div id="sideLeft">
            </div>
            
                <div id="sideContainer">
                </div>
                <script type="text/javascript">
                    $.ajax({
                        url: '/' + currentBlogApp + '/mvc/blog/Minyx2_Lite_SideColumn.aspx',
                        data: '{}',
                        type: 'post',
                        dataType: 'text',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data) {
                                $("#sideContainer").html(data);
                                loadBlogDefaultCalendar();
                                loadBlogSideBlocks();
                                var m = window.__blog.sideContainerRendered;
                                if (m) { m(__$("sideContainer")); }
                                window.__blog.sidebar.__layout();
                            }
                        }
                    });

                </script>
            
        </div>

        <script type="text/javascript">
            var m = window.__blog.sidebarRendered;
            if (m) { m(__$("sidebar")); }
        </script>

        <div id="footer">
            
<p id="logoFoot">
    <a href="http://www.spiga.com.mx/" title="Agencia Interactiva Spiga">www.spiga.com.mx</a>
</p>
<div class="footText">
<p>
Copyright &copy;2016 虫师
</p>
<p>
<a href="http://www.cnblogs.com">博客园</a>
</p>
</div>
        </div>
    </div>

    <script type="text/javascript">
        var m = window.__blog.wrapperRendered;
        if (m) { m(__$("wrapper")); }
    </script>

</div>
<script type="text/javascript">
    var m = window.__blog.containerRendered;
    if (m) { m(__$("container")); }
</script>
<!--PageEndHtml Block Begin-->
<script src="http://s13.cnzz.com/stat.php?id=3347352&web_id=3347352&show=pic2" language="JavaScript">
</script>
<div align="center"><a href="http://www.amazingcounters.com"><img border="0" src="http://cc.amazingcounters.com/counter.php?i=3064217&c=9192964" alt="Web Page Counters"></a><br><a href="http://www.coupons-coupon-codes.com/staples/">Computer Desks</a></div>


<!--评论，生成气泡效果标签代码-->
  <script type="text/javascript" language="javascript"> 
      $(document).ready(function() {
          var commentTime = setInterval(function(){if($("#comments_pager_bottom").length>0){CommentBubble();clearTimeout(commentTime);}},50);
      }); 
      function CommentBubble()
      {
  var w1 = '<div class="list">' +
          '<table class="out" border="0" cellspacing="0" cellpadding="0"> ' +
             '<tr>' +
                 '<td class="icontd" align="right" valign="bottom">' +
                     '<img src="" width="70px" height="57px"/>' +
                 '</td>' +
                 '<td align="left" valign="bottom" class="q">' +
                     '<table border="0" cellpadding="0" cellspacing="0" style=""> ' +
                         '<tr><td class="topleft"></td><td class="top"></td><td class="topright"></td></tr> ' +
                         '<tr><td class="left"></td> <td align="left" class="conmts"><p>';
  
  
         var w2 = '</p> </td> <td class="right"></td></tr> ' +
                         '<tr><td class="bottomleft"></td><td class="bottom"></td><td class="bottomright"></td></tr> ' +
                     '</table>' +
                 '</td> ' +
             '</tr> ' +
         '</table> ' +
     '</div>';
  
         $.each($(".blog_comment_body"), function(i, t) {
             $(t).html(w1 + $(t).html() + w2);
         });
 $(".louzhu").closest(".feedbackItem").find(".out").removeClass("out").addClass("inc");
         /*.find(".q").attr("align","right");*/
         }
 </script>
<!--PageEndHtml Block End-->
</body>
</html>
